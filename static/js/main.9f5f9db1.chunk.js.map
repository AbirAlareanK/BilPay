{"version":3,"sources":["Components/InvoicesTable.module.css","Components/InvoiceBriefWrapper.module.css","Components/InvoiceBriefWrapper.js","Utils/Context/InvoicesProvider.js","Containers/InvoiceBriefArray.js","Components/InvoicesTable.js","Containers/Invoices.js","App.js","index.js"],"names":["module","exports","InvoiceBriefWrapper","precentage","number","title","color","Col","xs","sm","md","lg","className","Classes","InvoBriefWrapper","InvoBriefWrapperSec","size","style","fontWeight","InvoicesContext","createContext","UseInvoices","useContext","InvoicesProvider","props","useState","InvoicesData","invoices","setInvoices","filteredPaidInvo","filter","invoice","status","filteredUnPaidInvo","filteredRows","map","client","date","email","amount","serviceType","serviceStatus","detailsPage","Provider","value","AddInvoice","newInvoice","id","nanoid","GetPaidInvoices","length","Math","round","GetUnPaidInvoices","GetTotalInvoices","GetTableRows","children","InvoiceBriefArray","InvoicesBrief","setInvoiceBrief","useEffect","brief","index","InvoicesTable","rows","cols","columns","row","clickEvent","console","log","datatable","tableCard","tableActionButtons","tableData","responsiveMd","small","btn","hover","sortable","searching","data","paginationLabel","displayEntries","pagesAmount","entries","infoLabel","Invoices","Container","Row","colData","require","window","React2","React1","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f5f9db1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCard\":\"InvoicesTable_tableCard__TJciU\",\"tableActionButtons\":\"InvoicesTable_tableActionButtons__2aNPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InvoBriefWrapper\":\"InvoiceBriefWrapper_InvoBriefWrapper__31WuZ\",\"InvoBriefWrapperSec\":\"InvoiceBriefWrapper_InvoBriefWrapperSec__2DGrq\"};","import { IoReceiptOutline } from 'react-icons/io5'\r\nimport Classes from './InvoiceBriefWrapper.module.css';\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst InvoiceBriefWrapper = ({precentage , number , title , color}) => {\r\n    return (\r\n        <Col xs={12} sm={6} md={6} lg={3}>\r\n            <div className={`${Classes.InvoBriefWrapper} card-wrapper`}>\r\n                <div className={Classes.InvoBriefWrapperSec}>\r\n                    <IoReceiptOutline color={color} size=\"25px\"/>\r\n                    <span >{number}</span>\r\n                    <p>{title}</p>\r\n                </div>\r\n                <div style={{color:color, fontWeight:600}}>\r\n                    {precentage} %\r\n                </div>\r\n            </div>\r\n        </Col>\r\n        \r\n    );\r\n}\r\n\r\nexport default InvoiceBriefWrapper;","import { createContext, useContext , useState } from \"react\";\r\nimport InvoicesData from '../../Assets/invoices-data.json';\r\nimport { nanoid } from 'nanoid';\r\n\r\n\r\nconst InvoicesContext =  createContext();\r\nexport const UseInvoices = () => useContext(InvoicesContext) ;\r\n\r\nconst InvoicesProvider = (props) => {\r\n    const [invoices , setInvoices ] = useState(InvoicesData);\r\n\r\n    const filteredPaidInvo = invoices.filter(invoice =>  invoice.status === \"paid\");\r\n    const filteredUnPaidInvo = invoices.filter(invoice => invoice.status === \"unpaid\");\r\n    const filteredRows = invoices.map(invoice => (\r\n        {\r\n             client : invoice['client'],\r\n             date : invoice['invoice-date'],\r\n             email: invoice['email'],\r\n             amount : invoice['subtotal'],\r\n             serviceType : invoice['service-details'],\r\n             serviceStatus : invoice['status'],\r\n             detailsPage : \"...\"\r\n         } \r\n     ))\r\n    const AddInvoice = (newInvoice) => {\r\n        setInvoices([\r\n            ...invoices,\r\n            {\r\n                id: nanoid(),\r\n                ...newInvoice\r\n            }\r\n        ]);\r\n    }\r\n\r\n    const GetTableRows = () => {\r\n        return filteredRows ;\r\n    }\r\n\r\n    const  GetPaidInvoices = () => {\r\n        return {\r\n            number : filteredPaidInvo.length,\r\n            precentage : Math.round(100 * filteredPaidInvo.length / invoices.length)\r\n        }\r\n    }\r\n    const GetUnPaidInvoices = () => {\r\n        return {\r\n            number : filteredUnPaidInvo.length,\r\n            precentage : Math.round(100 * filteredUnPaidInvo.length / invoices.length)\r\n        }\r\n    }\r\n    const GetTotalInvoices = () => {\r\n        return {\r\n            number : invoices.length,\r\n            precentage : 100\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <InvoicesContext.Provider value = {{\r\n                invoices,\r\n                AddInvoice,\r\n                GetPaidInvoices,\r\n                GetUnPaidInvoices,\r\n                GetTotalInvoices ,\r\n                GetTableRows\r\n            }}>\r\n           {props.children}\r\n        </InvoicesContext.Provider>\r\n    );\r\n}\r\n\r\nexport default InvoicesProvider;\r\n","import { useEffect, useState } from \"react\";\r\nimport InvoiceBriefWrapper from \"../Components/InvoiceBriefWrapper\";\r\nimport { UseInvoices } from \"../Utils/Context/InvoicesProvider\";\r\n\r\nconst InvoiceBriefArray = () => {\r\n    \r\n    const { GetPaidInvoices , GetUnPaidInvoices , GetTotalInvoices} = UseInvoices();\r\n    const [InvoicesBrief , setInvoiceBrief] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        setInvoiceBrief([\r\n            {\r\n                ...GetTotalInvoices(),\r\n                title:\"Total Invoices\",\r\n                color:\"green\"\r\n            },\r\n            {\r\n                ...GetPaidInvoices(),\r\n                title:\"Paid Invoices\",\r\n                color:\"greenyellow\"\r\n            },\r\n            {\r\n                ...GetUnPaidInvoices(),\r\n                title:\"Unpaid Invoices\",\r\n                color:\"red\"\r\n            },\r\n            {\r\n                number: 20,\r\n                precentage: 31,\r\n                title:\"Draft Invoices\",\r\n                color:\"gray\"\r\n            }])\r\n    } ,[ GetPaidInvoices , GetUnPaidInvoices , GetTotalInvoices]);\r\n\r\n    return(\r\n        <>\r\n            {InvoicesBrief.map((brief , index)=> (\r\n                <InvoiceBriefWrapper \r\n                    key={index}\r\n                    title={brief.title}\r\n                    color={brief.color}\r\n                    precentage={brief.precentage}\r\n                    number={brief.number}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceBriefArray;","import React , {  useState} from 'react';\r\nimport { MDBDataTable } from 'mdbreact';\r\nimport Classes from './InvoicesTable.module.css';\r\n\r\nconst InvoicesTable = ({rows,cols}) => {\r\n  \r\n  const ShowDetailPage = (id)=> {\r\n    console.log('itemPresses' + id )\r\n  }\r\n\r\n  const [datatable  ] = useState({\r\n    columns : cols,\r\n    rows : rows.map(row => ({\r\n          ...row,\r\n          clickEvent:(row)=>{\r\n            ShowDetailPage(row[\"client\"])\r\n          }\r\n        }))\r\n  });\r\n\r\n  return (\r\n    <div className={`${Classes.tableCard} card-wrapper`} >\r\n      <section className={Classes.tableActionButtons}>\r\n        <h5>Latest Invoives</h5>                  \r\n        <ul>\r\n          <li>Monthly</li>\r\n          <li>Weekly</li>\r\n          <li>Today</li>\r\n        </ul>\r\n      </section>\r\n      <MDBDataTable\r\n        className={Classes.tableData} \r\n        responsiveMd\r\n        small\r\n        btn={true}\r\n        hover={true}\r\n        sortable={false}\r\n        searching={false}\r\n        data={datatable}\r\n        paginationLabel={[\"<\", \">\"]}\r\n        displayEntries={false}\r\n        pagesAmount={3}\r\n        entries={5}\r\n        infoLabel={[\"Showing\", \"to\", \"of\", \"\"]}\r\n        \r\n      />\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default InvoicesTable ;","import InvoiceBriefArray from \"./InvoiceBriefArray\";\r\nimport InvoicesTable from '../Components/InvoicesTable';\r\nimport Container  from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport { Col } from \"react-bootstrap\";\r\nimport colData from '../Assets/invoices-col-table.json';\r\nimport { UseInvoices } from \"../Utils/Context/InvoicesProvider\";\r\nimport { useState } from \"react\";\r\n\r\nconst Invoices = () => {\r\n    \r\n    const { GetTableRows } = UseInvoices();\r\n    const [ rows ] = useState(GetTableRows());\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col lg={2}>\r\n                </Col>\r\n                <Col lg={10}>\r\n                    <h3>Invoices</h3>\r\n                    <Row>\r\n                        <InvoiceBriefArray />\r\n                    </Row>\r\n                    <Row>\r\n                        <InvoicesTable rows={rows} cols={colData}/>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default Invoices;\r\n\r\n\r\n","import './App.css';\nimport Invoices from './Containers/Invoices';\nimport InvoicesProvider from './Utils/Context/InvoicesProvider';\n\n\n// THis code to check if there is two react \nrequire('react-dom');\nwindow.React2 = require('react');\nconsole.log(window.React1 === window.React2); // true => one react\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InvoicesProvider>\n        <Invoices />\n      </InvoicesProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n\nReactDOM.render(\n      <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}